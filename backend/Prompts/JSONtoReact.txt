
BE SURE TO INCLUDE GRAPHS IN THE CODE EXPLICITLY BY MAKING THE SHAPES LINES AND TEXT BOXES
UNDERSTAND THAT THE CODE YOU ARE GENERATING MUST FUNCTION STANDALONE WITHOUT ACCESS TO THE JSON INPUT. THIS MEANS ALL OF THE DATA MUST BE HARD CODED INTO THE ELEMENTS. YOU MUST NOT INCLUDE PLACEHOLDER CODE, AS THE CODE IS DIRECTLY BEING SENT TO BE COMPILED AND THIS WILL CRASH THE PROGRAM.
Create a technical, appealing, intuitive, and compact visual abstract in js with React using this JSON. You only have access to the following imports that are globally scoped: import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';. There is no need to import at the top as they are globally scoped.
Make sure all the texts are CLEARLY visible and are NOT out of the screen.  Also, make sure the texts DO NOT cover each other. You should make sure to use all the information given in the JSON file above. This is top top priority that you use ALL information given in the JSON file. This means I am expecting code for ALL of, Overview (problem, hypothesis, solution), context, methodologies, results, and conclusion, again, ALL of them. First, count the number of elements in the JSON, then make them one by one, so that you don't drop or miss any of them.
The visual abstract should include graphs/charts or other visuals if needed. For the elements that are labeled "diagram", construct a diagram based on the description in "caption". For the elements that are labeled "chart" or "diagram", make sure to include the "caption" provided in the JSON. This is VERY important.
These visuals also should not cover each other or texts. They also should fit on the screen and be in reasonable sizing. I want you to give me VisualAbstract.js. It must include inline css styling, as I will feed it into a react-live window so it must meet that format. Make sure the visual abstract is compact and intriguing. Also, make sure you use space most efficiently. In other words, make the visual abstract compact. Please be mindful of the compositions, as I want it to look neat. In the JSON file, for the elements where the "type" is "text", just embed texts. For the elements where "type" is "diagram" or "graph", you should create a graph or a diagram. output just the singular file of code. remember, there must be no imports in the generated js. not this: const VisualAbstract = () => { } component must be prepared like this: function VisualAbstract() {  }. there must be no export VisualAbstract at the end of the response. DO NOT LEAVE COMMENTS ON WHAT TO FILL IN LATER. ENSURE THAT ALL DATA THAT IS NEEDED IN THE REPRESENTATION IS IN THE JSX SNIPPET. PROVIDE ALL SHAPES WITHIN the code it must be able to run immediately. TRY to make as many graphs and graphics as possible using elementary shapes and charts. YOU MUST NOT INCLUDE ANY CODE FENCES IN YOUR OUTPUT, JUST THE CODE ITSELF. You must layout the sections and elements for a 16:9 viewport. No element overlap takes utmost priority, then focus on minimizing empty space in the viewport.
Finally, before you generate, I want none of the elements overlapping or covering each other by being on top of each other. Do this by making it so that none of the individual divs for sections or elements are overlapping. For example, make sure There is enough spacing between a graph and the texts below, as the caption of the graph and the texts below might be on top of each other. To be clear, YOU MUST ensure that text does not overlap at all. If you need to add extra margin above or below any html elements, do so.