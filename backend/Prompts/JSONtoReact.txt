

Use the above JSON as input
Create a visual abstract in js with React using this JSON. Make sure all the texts are CLEARLY visible and are NOT out of the screen. Also, make sure the texts DO NOT cover each other. You should make sure to use all the information given in the JSON file above. This is top top priority that you use ALL information given in the JSON file. This means I am expecting code for ALL of, Overview (problem, hypothesis, solution), context, methodologies, results, and conclusion, again, ALL of them. First, count the number of elements in the JSON, then make them one by one, so that you don't drop or miss any of them.
The visual abstract should include graphs/charts or other visuals if needed. For the elements that are labeled "diagram", construct a diagram based on the description in "caption". For the elements that are labeled "chart" or "diagram", make sure to include the "caption" provided in the JSON. This is VERY important.
These visuals also should not cover each other or texts. They also should fit on the screen and be in reasonable sizing. I want you to give me VisualAbstract.js. It must include inline css styling, as I will feed it into a react-live window so it must meet that format. Here is an example format for an extremely basic input function test() {
const data = [
{
name: "blog_posts",
list: "/blog-posts",
create: "/blog-posts/create",
edit: "/blog-posts/edit/:id",
show: "/blog-posts/show/:id",
meta: {
canDelete: true,
},
},
{
name: "categories",
list: "/categories",
create: "/categories/create",
edit: "/categories/edit/:id",
show: "/categories/show/:id",
meta: {
canDelete: true,
},
},
{
name: "dashboard",
list: "/dashboard",
meta: {
label: "Dashboard",
dataProviderName: "metrics",
},
},
]
return (
<>
<BarChart width={730} height={250} data={data}>
<CartesianGrid strokeDasharray="3 3" />
<XAxis dataKey="name" />
<YAxis />
<Tooltip />
 <Legend />
 <Bar dataKey="pv" fill="#8884d8" />
 <Bar dataKey="uv" fill="#82ca9d" />
</BarChart>;
</>
)
}. Make sure the visual abstract is compact and intriguing. Also, make sure you use space most efficiently. In other words, make the visual abstract compact. Please be mindful of the compositions, as I want it to look neat. In the JSON file, for the elements where the "type" is "text", just embed texts. For the elements where "type" is "diagram" or "graph", you should create a graph or a diagram. output just the singular file of code. remember, there must be no imports in the generated js. not this: const VisualAbstract = () => { } component must be prepared like this: function VisualAbstract() {  }. there must be no export VisualAbstract at the end of the response.


